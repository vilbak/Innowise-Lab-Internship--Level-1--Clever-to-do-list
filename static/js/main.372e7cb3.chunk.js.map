{"version":3,"sources":["fireBase/index.js","store/actions/auth.js","store/actions/actionTypes.js","components/Login/index.js","components/Main/Calendar/index.js","store/actions/filters.js","components/Main/LogOut/index.js","store/actions/notes.js","components/Main/Tasks/TasksAdd/index.js","selectors/index.js","components/Main/Tasks/TasksList/TaskItem/index.js","components/Main/Tasks/TasksList/index.js","components/Main/Tasks/index.js","components/Main/index.js","components/Main/Tasks/TaskEdit/index.js","components/PrivateRoute.js","components/Spinner/index.js","components/Register/index.js","components/App.js","store/reducers/authReducer.js","store/reducers/noteReducer.js","store/reducers/filtersReducer.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","auth","email","password","isSignUp","dispatch","type","authData","returnSecureToken","url","axios","post","then","response","idToken","userId","data","localId","toast","success","checkAuthTimeout","expiresIn","catch","err","error","message","expirationTime","setTimeout","connect","state","authenticated","loading","onAuth","actions","props","useState","setEmail","setPassword","clickHandler","event","a","preventDefault","console","authRedirect","to","className","autoClose","onChange","e","target","value","placeholder","onClick","filter","onStartDate","startDate","onEndDate","endDate","calendarFocused","setCalendarFocused","onDatesChange","focusedInput","onFocusChange","numberOfMonths","isOutsideRange","showClearDates","onLogOut","addNote","task","removeNote","id","note","log","existingNote","title","setTitle","moment","createdAt","chosenDay","setChosenDay","description","setDescription","setError","onSubmit","valueOf","autoFocus","date","onDateChange","focused","sortBy","createdAtMoment","startDateMatch","isSameOrBefore","endDateMatch","isSameOrAfter","sort","b","amount","setStartRemove","ref","remove","startRemoveNote","format","length","map","startAddNote","noteData","notes","push","key","Main","find","match","params","updates","update","editNote","isAuthenticated","Component","component","rest","spinner","confirmPassword","setConfirmPassword","Spinner","App","from","exact","path","Login","Register","TaskEdit","initialState","authReducer","action","noteReducer","filtersReducerDefaultState","startOf","endOf","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunk","once","snapshot","forEach","childSnap","val","setNotes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.372e7cb3.chunk.js","sourcesContent":["/* eslint-disable */\nimport firebase from 'firebase'\n\n\nconst config = {\n  apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n  authDomain: 'innowise-e98e9.firebaseapp.com',\n  databaseURL: 'https://innowise-e98e9-default-rtdb.firebaseio.com',\n  projectId: 'innowise-e98e9',\n  storageBucket: 'innowise-e98e9.appspot.com',\n  messagingSenderId: '85270176781',\n  appId: '1:85270176781:web:995945ee59dd33c5ca2144',\n  measurementId: 'G-SMJP9VS173',\n}\nfirebase.initializeApp(config)\n\n\nconst database = firebase.database()\n\nexport {\n  firebase,\n  database as default,\n}\n\n","\nimport axios from 'axios'\nimport { toast } from 'react-toastify'\nimport * as actionTypes from './actionTypes'\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START,\n  }\n}\nexport const authSuccess = (idToken, userId) => {\n  return dispatch => {\n    dispatch({\n      type: actionTypes.AUTH_SUCCESS,\n      idToken: idToken,\n      userId: userId,\n    })\n    toast.success('Logged in')\n  }\n}\n\nexport const authFail = (error) => {\n  return dispatch => {\n    dispatch({\n      type: actionTypes.AUTH_FAIL,\n      error: error,\n    })\n    toast.error(error.message)\n  }\n}\n\n\nexport const auth = (email, password, isSignUp) => {\n  return dispatch => {\n    dispatch(authStart())\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true,\n    }\n    let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDyKnvtdUTNuZV6ZXTWWyZV0wKS0dSAlJU'\n    if (isSignUp) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDyKnvtdUTNuZV6ZXTWWyZV0wKS0dSAlJU'\n    }\n    axios.post(url, authData)\n         .then(response => {\n           dispatch(authSuccess(response.data.idToken, response.data.localId))\n           dispatch(checkAuthTimeout(response.data.expiresIn))\n         })\n         .catch((err => {\n           dispatch(authFail(err.response.data.error))\n\n         }))\n  }\n}\nexport const logout = () => {\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n  }\n}\n\nexport const checkAuthTimeout = (expirationTime) => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout())\n\n    }, expirationTime * 1000)\n\n  }\n}\n\n\n\n","\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\nexport const AUTH_START = 'AUTH_START'\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\nexport const AUTH_FAIL = 'AUTH_FAIL'\n\nexport const ADD_NOTE = 'ADD_NOTE'\nexport const REMOVE_NOTE = 'REMOVE_NOTE'\nexport const EDIT_NOTE = 'EDIT_NOTE'\n\n\nexport const SET_START_DATE='SET_START_DATE'\nexport const SET_END_DATE='SET_END_DATE'\n","import PropTypes from 'prop-types'\nimport React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Link,\n  Redirect,\n} from 'react-router-dom'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport * as actions from '../../store/actions/index'\nimport './style.css'\n\nconst Login = (props) => {\n  const [ email, setEmail ] = useState('')\n  const [ password, setPassword ] = useState('')\n  const isSignUp = true\n\n  /* function for login*/\n  const clickHandler = async (event) => {\n    try {\n      event.preventDefault()\n      await props.onAuth(email, password, isSignUp)\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  let authRedirect = null\n\n  if (props.auth) {\n    authRedirect = <Redirect to={'/main'} />\n  }\n\n  return (\n    <section className={'wrapper'}>\n      <div className={'container'}>\n        {authRedirect}\n        <ToastContainer autoClose={2000} />\n        <div className={'registerForm'}>\n          <span className={'title'}>Login Page</span>\n          <input\n            className={'input'}\n            onChange={(e) => setEmail(e.target.value)}\n            value={email}\n            type=\"text\"\n            placeholder=\"E-mail\"\n          />\n          <input\n            className={'input'}\n            onChange={(e) => setPassword(e.target.value)}\n            value={password}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n          <button onClick={clickHandler} className={'btnR'}>Sign in</button>\n          <Link className={'link'} to=\"/register\">Switch to Register</Link>\n        </div>\n      </div>\n    </section>\n\n  )\n}\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth.authenticated,\n    loading: state.auth.loading,\n    error: state.auth.error,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, password, isSignUp) => dispatch(actions.auth(email, password, isSignUp)),\n  }\n}\nLogin.propTypes = {\n  onAuth: PropTypes.func,\n  auth: PropTypes.bool,\n  loading: PropTypes.bool,\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n","import React  from 'react';\nimport { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { DateRangePicker } from 'react-dates'\nimport { connect } from 'react-redux'\nimport * as actions from '../../../store/actions/filters'\nimport './style.css'\n\nconst Calendar = (props) => {\n  const [ calendarFocused, setCalendarFocused ] = useState(null)\n\n  const onDatesChange = ({ startDate, endDate }) => {\n    props.onStartDate(startDate)\n    props.onEndDate(endDate)\n  }\n  const onFocusChange = (calendarFocused) => {\n    setCalendarFocused(calendarFocused)\n\n  }\n\n  return (\n    <div className={'maxWidth'}>\n      <DateRangePicker\n        startDate={props.filter.startDate}\n        endDate={props.filter.endDate}\n        onDatesChange={onDatesChange}\n        focusedInput={calendarFocused}\n        onFocusChange={onFocusChange}\n        numberOfMonths={1}\n        isOutsideRange={() => false}\n        showClearDates={true}\n      />\n\n    </div>\n  )\n}\nconst mapStateToProps = (state) => {\n  return {\n    filter: state.filter,\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    onStartDate: (startDate) => dispatch(actions.setStartDate(startDate)),\n    onEndDate: (endDate) => dispatch(actions.setEndDate(endDate)),\n  }\n}\n\nCalendar.propTypes = {\n  filter: PropTypes.object,\n  onStartDate:PropTypes.func,\n  onEndDate:PropTypes.func\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Calendar)\n","import * as actionTypes from './actionTypes'\n\nexport const setStartDate = (startDate) => ({\n  type: actionTypes.SET_START_DATE,\n  startDate,\n})\n\n// SET_END_DATE\nexport const setEndDate = (endDate) => ({\n  type: actionTypes.SET_END_DATE,\n  endDate,\n})\n","\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport {Redirect} from 'react-router'\nimport * as actions from '../../../store/actions/index'\nimport './style.css'\n\nconst LogOut = (props) => {\n  /*function for logout */\n  const clickHandler = async (event) => {\n    try {\n      event.preventDefault()\n      await props.onLogOut()\n\n    } catch (e) {\n      console.error(e)\n    }\n  }\n  let authRedirect = null\n\n  if (!props.auth) {\n    authRedirect = <Redirect to={'/login'} />\n  }\n  return (\n      <section className={'maxWidth'}>\n        {authRedirect}\n        <div className={'header'}>\n          <h1 className={'titleHeader'}> Task Manager</h1>\n          <button onClick={clickHandler} className={'btn'}>Log out</button>\n        </div>\n      </section>\n\n\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth.authenticated,\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLogOut: () => dispatch(actions.logout()),\n  }\n}\n\nLogOut.propTypes = {\n  onLogOut: PropTypes.func,\n  auth: PropTypes.bool,\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogOut)\n","import database from '../../fireBase'\n\nexport const addNote = task => (\n  {\n    type: 'ADD_NOTE',\n    task,\n  }\n)\n\nexport const removeNote = ({ id } = {}) => ({\n  type: 'REMOVE_NOTE',\n  id,\n})\n\nexport const startRemoveNote = ({ id } = {}) => {\n  return (dispatch) => {\n    return database.ref(`notes/${id}`).remove().then(() => {\n      dispatch(removeNote({ id }))\n    })\n  }\n}\n\n\nexport const editNote = (id, updates) => ({\n  type: 'EDIT_NOTE',\n  id,\n  updates,\n})\nexport const startEditNote = (id, updates) => {\n  return (dispatch) => {\n    return database.ref(`notes/${id}`).update(updates).then(() => {\n      dispatch(editNote(id, updates))\n    })\n  }\n}\n\nexport const startAddNote = (noteData = {}) => {\n  return (dispatch) => {\n    const {\n      description = '',\n      note = '',\n      createdAt = '',\n    } = noteData\n    const notes = { description, note, createdAt }\n    database.ref('notes').push(notes).then((ref) => {\n      dispatch(addNote(({\n        id: ref.key,\n        ...notes,\n      })))\n    })\n\n  }\n}\n\nexport const setNotes = (notes) => ({\n  type: 'SET_NOTES',\n  notes,\n})\n\nexport const startSetNotes = () => {\n  return (dispatch) => {\n    database.ref('notes').once('value').then((snapshot) => {\n      const notes = []\n      snapshot.forEach((childSnap) => {\n        notes.push({\n          id: childSnap.key,\n          ...childSnap.val(),\n        })\n      })\n      dispatch(setNotes(notes))\n    })\n  }\n}\n","import moment from 'moment'\nimport PropTypes from 'prop-types'\nimport React, { useState } from 'react'\nimport { SingleDatePicker } from 'react-dates'\nimport 'react-dates/lib/css/_datepicker.css'\nimport { connect } from 'react-redux'\nimport './style.css'\n\nconst TasksAdd = (props) => {\n  console.log('existing', props.existingNote)\n  const [ title, setTitle ] = useState(props.existingNote ? props.existingNote.note : '')\n  const [ calendarFocused, setCalendarFocused ] = useState(false)\n  const [ chosenDay, setChosenDay ] = useState(props.existingNote ? moment(props.existingNote.createdAt) : moment())\n  const [ description, setDescription ] = useState(props.existingNote ? props.existingNote.description : '')\n  const [ error, setError ] = useState('')\n\n\n  const onDateChange = (createdAt) => {\n    if (chosenDay) {\n      setChosenDay(createdAt)\n    }\n\n  }\n  const onChangeDescription = (e) => {\n    const value = e.target.value\n    setDescription(value)\n  }\n\n  const onChange = (e) => {\n    const value = e.target.value\n    setTitle(value)\n  }\n  const onFocusChange = ({ focused }) => {\n    setCalendarFocused(focused)\n  }\n  const onSubmitHandler = (e) => {\n    e.preventDefault()\n    if (!description) {\n      setError('Please provide description')\n\n    } else {\n      setError('')\n      props.onSubmit({\n        note: title,\n        description: description,\n        createdAt: chosenDay.valueOf(),\n      })\n    }\n\n  }\n  return (\n    <div className={'contentContainer'}>\n      <h1 className={'taskHeader'}> {props.existingNote ? 'Edit Notes' : 'Add Notes'}</h1>\n      <form className={'form'} onSubmit={onSubmitHandler}>\n        {error && <p className={'formError'}>{error}</p>}\n        <input className={'textInput'} type='text'\n               placeholder='Title'\n               autoFocus\n               value={title}\n               onChange={onChange} />\n        <textarea className={'description'} placeholder='Add a description for your note'\n                  value={description}\n                  onChange={onChangeDescription} />\n        <SingleDatePicker\n          date={chosenDay}\n          onDateChange={onDateChange}\n          focused={calendarFocused}\n          onFocusChange={onFocusChange}\n        />\n        <div>\n          <button className={'addButton'}>{props.existingNote ? 'Edit The Note' : 'Add a  Note'}</button>\n        </div>\n\n      </form>\n    </div>\n\n  )\n}\nconst mapStateToProps = (state) => {\n  return {\n    note: state.note,\n  }\n}\n\n\nTasksAdd.propTypes = {\n  note: PropTypes.object,\n  existingNote: PropTypes.object,\n  onSubmit: PropTypes.func,\n}\n\nexport default connect(mapStateToProps)(TasksAdd)\n","/* eslint-disable */\nimport moment from 'moment'\n\nexport default (note, { sortBy, startDate, endDate }) => {\n  const createdAtMoment = moment(note.createdAt)\n  return note.filter((note) => {\n    const startDateMatch = startDate ? startDate.isSameOrBefore(createdAtMoment, 'day') : true\n    const endDateMatch = endDate ? endDate.isSameOrAfter(createdAtMoment, 'day') : true\n\n    return startDateMatch && endDateMatch\n  }).sort((a, b) => {\n    if (sortBy === 'date') {\n      return a.createdAt < b.createdAt ? 1 : -1\n    } else if (sortBy === 'amount') {\n      return a.amount < b.amount ? 1 : -1\n    }\n  })\n};\n","\nimport moment from 'moment'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { startRemoveNote } from '../../../../../store/actions/notes'\nimport './style.css'\n\nconst TaskItem = ({ setStartRemove, note, id, description, createdAt }) => (\n\n  <div className={'taskContainer'}>\n    <h3>{description}</h3>\n    <h3>{note}</h3>\n    <span>{moment(createdAt).format('MMMM Do, YYYY')}</span>\n\n\n    <div className={'buttonContainer'}>\n      <button className={'removeButton'} onClick={() => {\n        setStartRemove({ id })\n      }}>Remove\n      </button>\n\n      <Link className={'editButton'} to={`/edit/${id}`}> Edit</Link>\n    </div>\n  </div>\n)\n\nconst mapDispatchToProps = (dispatch) => ({\n  setStartRemove: ({ id }) => dispatch(startRemoveNote({ id })),\n})\nTaskItem.propTypes = {\n  setStartRemove: PropTypes.func,\n  note: PropTypes.string,\n  id: PropTypes.any,\n  description: PropTypes.string,\n  createdAt: PropTypes.any,\n\n\n}\n\nexport default connect(null, mapDispatchToProps)(TaskItem)\n","\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport filter from '../../../../selectors/'\nimport TaskItem from './TaskItem'\nimport './style.css'\n\nexport const TaskList = (props) => {\n  return (\n    <div className={'contentContainer'}>\n      <div className={'listHeader'}>\n        Notes\n      </div>\n      {\n        props.note.length === 0 ? (\n          <p>No notes</p>\n        ) : (\n          props.note.map((note) => {\n            return <TaskItem key={note.id} {...note} />\n          })\n        )\n      }\n    </div>\n  )\n}\nconst mapStateToProps = (state) => {\n  return {\n    note: filter(state.note, state.filter),\n  }\n}\nTaskList.propTypes = {\n  note: PropTypes.array,\n\n}\n\n\nexport default connect(mapStateToProps)(TaskList)\n","\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { startAddNote } from '../../../store/actions/notes'\nimport TasksAdd from './TasksAdd'\nimport TaskList from './TasksList'\n\nconst Tasks = (props) => {\n\n  return (\n  <>\n      <TasksAdd\n        onSubmit={(note) => {\n          props.startAddNote(note)\n        }} />\n      <TaskList />\n    </>)\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  startAddNote: (note) => dispatch(startAddNote(note)),\n})\n\nTasks.propTypes = {\n  startAddNote: PropTypes.func,\n\n}\n\nexport default connect(null, mapDispatchToProps)(Tasks)\n\n","\n\nimport React from 'react'\nimport Calendar from './Calendar'\nimport LogOut from './LogOut'\nimport './style.css'\nimport Tasks from './Tasks'\n\nconst Main = () => {\n\n  return (\n    <>\n      <LogOut />\n      <Calendar />\n      <Tasks />\n    </>\n\n  )\n}\n\n\nexport default Main\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport {\n  startEditNote,\n} from '../../../../store/actions/notes'\nimport TasksAdd from '../TasksAdd'\n\nconst TaskEdit = (props) => {\n  return (\n    <div>\n      <TasksAdd\n        existingNote={props.note}\n        onSubmit={(note) => {\n       props.dispatch(startEditNote(props.note.id,note))\n        }} />\n    </div>\n  )\n}\n\n\n\n\nconst mapStateToProps = (state, props) => {\n  return {\n    note: state.note.find((note) => {\n      return note.id === props.match.params.id\n    }),\n  }\n}\n\nTaskEdit.propTypes = {\n  note: PropTypes.array,\n  dispatch:PropTypes.func\n}\n\n\nexport default connect(mapStateToProps)(TaskEdit)\n\n\n","\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Redirect,\n  Route,\n} from 'react-router-dom'\n\n\nexport const PrivateRoute = ({\n                               isAuthenticated,\n                               component: Component,\n                               ...rest\n                             }) => {\n  return (\n    <Route {...rest} component={(props) => (\n      isAuthenticated ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to='/login' />\n      )\n    )} />\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.idToken !== null,\n  }\n}\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.any,\n  component:PropTypes.func\n\n}\n\nexport default connect(mapStateToProps)(PrivateRoute)\n","import React from 'react';\n\nimport   './style.css';\n\nconst spinner = () => (\n  <div className={\"Loader\"}>Loading...</div>\n);\n\nexport default spinner;\n","import PropTypes from 'prop-types'\nimport React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Link,\n  Redirect,\n} from 'react-router-dom'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport * as actions from '../../store/actions/index'\nimport Spinner from '../Spinner/index'\nimport './styles.css'\n\nconst Register = (props) => {\n  console.log(process.env.REACT_APP_GOOGLE_API_KEY)\n\n  const [ email, setEmail ] = useState('')\n  const [ password, setPassword ] = useState('')\n  const [ confirmPassword, setConfirmPassword ] = useState('')\n\n  /* function for auth */\n  const clickHandler = async (event) => {\n    if (confirmPassword === password) {\n      try {\n        event.preventDefault()\n        await props.onAuth(email, password)\n      } catch (e) {\n        console.error(e)\n      }\n    }\n  }\n\n  let authRedirect = null\n\n  if (props.auth) {\n    authRedirect = <Redirect to={'/main'} />\n  }\n\n  return ((props.loading ? <Spinner /> :\n      <section className={'wrapper'}>\n        {authRedirect}\n        <div className={'container'}>\n          <ToastContainer autoClose={2000} />\n          <div className={'registerForm'}>\n            <span className={'title'}>Register Page</span>\n            <input\n              className={'input'}\n              onChange={(e) => setEmail(e.target.value)}\n              value={email}\n              type=\"text\"\n              placeholder=\"E-mail\"\n            />\n            <input\n              className={'input'}\n              onChange={(e) => setPassword(e.target.value)}\n              value={password}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n            <input\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              className={'input'}\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n            />\n            <button onClick={clickHandler} className={'btnR'}>Sign Up</button>\n            <Link className={'link'} to=\"/login\">Switch to Login</Link>\n          </div>\n        </div>\n      </section>)\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth.authenticated,\n    loading: state.auth.loading,\n    error: state.auth.error,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, password) => dispatch(actions.auth(email, password)),\n  }\n}\nRegister.propTypes = {\n  onAuth: PropTypes.func,\n  auth: PropTypes.bool,\n  loading: PropTypes.bool,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)\n","\nimport React from 'react'\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom'\nimport '../fireBase/'\nimport './App.css'\nimport Login from './Login'\nimport Main from './Main'\nimport  TaskEdit  from './Main/Tasks/TaskEdit'\nimport PrivateRoute from './PrivateRoute'\nimport Register from './Register'\n\nfunction App()\n\n{\n  return (\n    <Router>\n      <Switch>\n        <Redirect from={'/'} to={'/register'} exact />\n        <PrivateRoute path={'/main'} component={Main} />\n        <Route path={'/login'} component={Login} />\n        <Route path={'/register'} component={Register} />\n        <Route path=\"/edit/:id\" component={TaskEdit} />\n\n        <PrivateRoute path={'/task'} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n","const initialState = {\n  idToken: null,\n  userId: null,\n  error: null,\n  loading: false,\n  authenticated: false,\n}\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'AUTH_SUCCESS':\n      return {\n        ...state,\n        idToken: action.idToken,\n        userId: action.userId,\n        error: null,\n        loading: false,\n        authenticated: true,\n      }\n    case 'AUTH_FAIL':\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n        authenticated: false,\n      }\n    case 'AUTH_START':\n      return {\n        ...state,\n        error: null,\n        loading: true,\n      }\n    case 'AUTH_LOGOUT':\n      return {\n        ...state,\n        idToken: null,\n        userId: null,\n        authenticated: false,\n      }\n    default:\n      return state\n  }\n}\n\n\nexport default authReducer\n","// Expenses Reducer\n\nconst initialState = []\n\n\nconst noteReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_NOTE':\n\n      return [\n        ...state,\n        action.task,\n      ]\n    case 'REMOVE_NOTE':\n      return state.filter(({ id }) => id !== action.id)\n    case 'EDIT_NOTE':\n      return state.map((note) => {\n\n        if (note.id === action.id) {\n          return {\n            ...note,\n            ...action.updates,\n          }\n        } else {\n          return note\n        }\n      })\n    case 'SET_NOTES':\n      return action.notes\n    default:\n      return state\n  }\n}\n\nexport default noteReducer\n","import moment from 'moment'\n\n// Filters Reducer\n\nconst filtersReducerDefaultState = {\n  startDate: moment().startOf('month'),\n  endDate: moment().endOf('month'),\n}\n\nexport default (state = filtersReducerDefaultState, action) => {\n  switch (action.type) {\n    case 'SET_START_DATE':\n      return {\n        ...state,\n        startDate: action.startDate,\n      }\n    case 'SET_END_DATE':\n      return {\n        ...state,\n        endDate: action.endDate,\n      }\n    default:\n      return state\n  }\n};\n","/* eslint-disable */\nimport React from 'react'\nimport 'react-dates/initialize'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport {\n  applyMiddleware,\n  combineReducers,\n  compose,\n  createStore,\n} from 'redux'\nimport thunk from 'redux-thunk'\nimport App from './components/App'\nimport './index.css'\nimport authReducer from './store/reducers/authReducer'\nimport noteReducer from './store/reducers/noteReducer'\nimport filtersReducer from './store/reducers/filtersReducer'\nimport {startSetNotes} from './store/actions/notes'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(combineReducers({\n  auth: authReducer,\n  note: noteReducer,\n  filter:filtersReducer\n\n}), composeEnhancers(\n  applyMiddleware(thunk),\n))\n\nconst jsx = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\nstore.dispatch(startSetNotes())\n\nReactDOM.render( <Provider store={store}>\n\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n</Provider>, document.getElementById('root'));\n\n\n\n\n\n"],"sourceRoot":""}